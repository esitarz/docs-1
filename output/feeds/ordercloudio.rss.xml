<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>A Pelican Blog - OrderCloud.io</title><link>/</link><description></description><lastBuildDate>Mon, 19 Mar 2018 15:32:44 +0000</lastBuildDate><item><title>Angularjs: Application Files</title><link>/angularjs-application-files.html</link><description>&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;src/app&lt;/code&gt; directory contains all code specific to this application. Apart
from &lt;code&gt;app.*.js&lt;/code&gt; and its accompanying tests (discussed below), this directory
is filled with subdirectories corresponding to high-level sections of the
application, often corresponding to top-level routes. Each directory can have
as many subdirectories as it needs …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/angularjs-application-files.html</guid><category>angularjs</category></item><item><title>Angularjs: Connecting To Your Organization</title><link>/angularjs-connecting-to-your-organization.html</link><description>&lt;p&gt;Linking your front-end application to an OrderCloud seller or buyer
organization can be accomplished using the &lt;code&gt;scope&lt;/code&gt; and &lt;code&gt;clientid&lt;/code&gt; constants
described below.&lt;/p&gt;
&lt;h2&gt;Application Constants&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;src/app/app.constants.json&lt;/code&gt; is a small, yet powerful file host a JSON object
of key value pairs to be used throughout the application. From …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/angularjs-connecting-to-your-organization.html</guid><category>angularjs</category></item><item><title>Angularjs: Contributing</title><link>/angularjs-contributing.html</link><description>&lt;p&gt;The OrderCloud team welcomes any and all open-source contributors to create a
pull request for bug fixes, enhancements, or new features (pending review).&lt;/p&gt;
&lt;p&gt;Prior to writing any code, be sure to open an issue
(&lt;a href="https://github.com/ordercloud-api/angular-seller/issues"&gt;Seller&lt;/a&gt;,
&lt;a href="https://github.com/ordercloud-api/angular-seller/issues"&gt;Buyer&lt;/a&gt;) with a
detailed description of your problem or proposed enhancement. We may already
be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/angularjs-contributing.html</guid><category>angularjs</category></item><item><title>Angularjs: Source Directory</title><link>/angularjs-source-directory.html</link><description>&lt;h2&gt;&lt;code&gt;./src/&lt;/code&gt; Directory&lt;/h2&gt;
&lt;p&gt;This is where the majority of development work will occur. It contains all of
the application code, tests, and assets.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;src/
  |- app/
  |- assets/
  |- index.html
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;src/app/&lt;/strong&gt; - contains all of the application code and corresponding tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src/assets/&lt;/code&gt; - static files like fonts and images&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;src/index.html&lt;/strong&gt; - this …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/angularjs-source-directory.html</guid><category>angularjs</category></item><item><title>Authentication: Anonymous Shopping</title><link>/authentication-anonymous-shopping.html</link><description>&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;Anonymous Shopping, or Guest Checkout, is when a user is enabled to browse a
catalog of products and/or checkout without registering themselves.
Accomplishing this requires OrderCloud.io developers to pull together a lot of
platform knowledge. We'll summarize that information here.&lt;/p&gt;
&lt;h2&gt;Configuring the Application&lt;/h2&gt;
&lt;p&gt;An anonymous buyer experience …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authentication-anonymous-shopping.html</guid><category>authentication</category></item><item><title>Authentication: Developer Access</title><link>/authentication-developer-access.html</link><description>&lt;h2&gt;__Developer Access&lt;/h2&gt;
&lt;p&gt;In order to make it easier for developers to get in and start testing
applications we made a unique role called &lt;code&gt;DevCenterImpersonate&lt;/code&gt;. This role
allows you to log into your application with your Dev Center username and
password so you don't have to go through the trouble of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authentication-developer-access.html</guid><category>authentication</category></item><item><title>Authentication: Impersonation</title><link>/authentication-impersonation.html</link><description>&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;In some instances, you may want to allow a user to order on behalf of another
user. We see this use case a lot in Customer Service Desk and Call Center
scenarios where customers will call their orders in and the service rep places
the order on the customer …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authentication-impersonation.html</guid><category>authentication</category></item><item><title>Authentication: Oauth2 Workflows</title><link>/authentication-oauth2-workflows.html</link><description>&lt;h2&gt;What is OAuth?&lt;/h2&gt;
&lt;p&gt;OAuth is an open standard for authorization commonly used as a way for users
to log into third party websites using Microsoft, Google, Facebook etc.
accounts without exposing their password. It is increasingly becoming an
industry standard for security and permission-based application experiences
and is what we …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authentication-oauth2-workflows.html</guid><category>authentication</category></item><item><title>Authentication: Refresh Tokens</title><link>/authentication-refresh-tokens.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;You will learn how to set-up and use refresh tokens which will allow your
users to remain signed in without having to reauthenticate. This guide assumes
you already know how to authenticate using one of the four workflows&lt;/p&gt;
&lt;h2&gt;__Understanding Tokens&lt;/h2&gt;
&lt;p&gt;A successful request to authenticate will return a response …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authentication-refresh-tokens.html</guid><category>authentication</category></item><item><title>Authentication: Security Profiles</title><link>/authentication-security-profiles.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;Security Profiles are an assortment of roles that give access to specific
endpoints in the OrderCloud.io API. Profiles can be assigned to the users of
your Seller or Buyer application. If a request is made by a user without
sufficient roles they will receive 403 Forbidden response. Configuration …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authentication-security-profiles.html</guid><category>authentication</category></item><item><title>Authorizenet: Authorize And Capture Transaction</title><link>/authorizenet-authorize-and-capture-transaction.html</link><description>&lt;h2&gt;__Authorize and Capture Transaction Overview&lt;/h2&gt;
&lt;p&gt;Authorizing and Capturing a credit card transaction is one of the most
involved methods included in this integration. This method will create a new
Customer Payment Profile on Authorize.Net and credit card on OrderCloud.io if
one does not already exist, authorize and capture …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authorizenet-authorize-and-capture-transaction.html</guid><category>authorizenet</category></item><item><title>Authorizenet: Authorize Only Transaction</title><link>/authorizenet-authorize-only-transaction.html</link><description>&lt;h2&gt;__Authorize Only Transaction Overview&lt;/h2&gt;
&lt;p&gt;Though a payment is not actually being captured, the Authorize Only
transaction method involves just as many integration calls as Authorizing and
Capturing a credit card transaction. This method will create a new Customer
Payment Profile on Authorize.Net and credit card on OrderCloud.io if …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authorizenet-authorize-only-transaction.html</guid><category>authorizenet</category></item><item><title>Authorizenet: Create Credit Card</title><link>/authorizenet-create-credit-card.html</link><description>&lt;h2&gt;__Create Credit Card Overview&lt;/h2&gt;
&lt;p&gt;When a customer within your buyer application creates a credit card, the
integration endpoint can be called in order to create that card within
OrderCloud.io as well as Authorize.Net. The card will created as a personal
card by default. However, passing &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;Shared …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authorizenet-create-credit-card.html</guid><category>authorizenet</category></item><item><title>Authorizenet: Delete Credit Card</title><link>/authorizenet-delete-credit-card.html</link><description>&lt;h2&gt;__Delete Credit Card Overview&lt;/h2&gt;
&lt;p&gt;When a customer within your buyer application deletes a credit card, the
integration endpoint can be called in order to delete that card on
OrderCloud.io as well as Authorize.Net. The Customer Payment Profile will be
removed on Authorize.Net, followed by the card being …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authorizenet-delete-credit-card.html</guid><category>authorizenet</category></item><item><title>Authorizenet: Prior Authorization Capture Transaction</title><link>/authorizenet-prior-authorization-capture-transaction.html</link><description>&lt;h2&gt;__Prior Authorization Capture Transaction Overview&lt;/h2&gt;
&lt;p&gt;In the case that Authorize Only was previously used for a payment, Prior
Authorization Capture Transaction can be used to actually capture the payment.
This method will first capture the payment on Authorize.Net, then create an
additional transaction on the previously created payment on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authorizenet-prior-authorization-capture-transaction.html</guid><category>authorizenet</category></item><item><title>Authorizenet: Refund Transaction</title><link>/authorizenet-refund-transaction.html</link><description>&lt;h2&gt;__Refund Transaction Overview&lt;/h2&gt;
&lt;p&gt;In the case that a refund is required for a previously captured transaction,
use the Refund Transaction method. This method will refund the transaction on
Authorize.Net for either an existing card or dynamically to the card details
provided then create an additional transaction on the existing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authorizenet-refund-transaction.html</guid><category>authorizenet</category></item><item><title>Authorizenet: Update Credit Card</title><link>/authorizenet-update-credit-card.html</link><description>&lt;h2&gt;__Update Credit Card Overview&lt;/h2&gt;
&lt;p&gt;When a customer within your buyer application updates a credit card, the
integration endpoint can be called in order to update that card on
OrderCloud.io as well as Authorize.Net. The Customer Payment Profile will be
updated on Authorize.Net, followed by the card being …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authorizenet-update-credit-card.html</guid><category>authorizenet</category></item><item><title>Authorizenet: Void Transaction</title><link>/authorizenet-void-transaction.html</link><description>&lt;h2&gt;__Void Transaction Overview&lt;/h2&gt;
&lt;p&gt;Though this method is used most commonly by other methods when certain actions
fail, it can also be called directly through the integration. This method will
void a previous transaction on Authorize.Net, then create a transaction tied
to the original payment on OrderCloud.io.&lt;/p&gt;
&lt;h2&gt;__Void Transaction …&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/authorizenet-void-transaction.html</guid><category>authorizenet</category></item><item><title>Basic Api Features: Conventions</title><link>/basic-api-features-conventions.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;With few exceptions, the OrderCloud.io API adheres to a RESTful architectural
style. URIs, HTTP verbs, headers, payloads, and response codes all follow
consistent and predictable patterns. This guide will outline conventions that
permeate the entire platform.&lt;/p&gt;
&lt;h2&gt;__SSL Everywhere&lt;/h2&gt;
&lt;p&gt;API access is only allowed via HTTPS; connections on port …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/basic-api-features-conventions.html</guid><category>basic api features</category></item><item><title>Basic Api Features: Errors</title><link>/basic-api-features-errors.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;OrderCloud.io uses conventional HTTP response codes to indicate success or
failure of an API request. In general, codes in the &lt;code&gt;2xx&lt;/code&gt; range indicate
success and codes in the &lt;code&gt;4xx&lt;/code&gt; range indicate an error failed given the
information provided (e.g., a required parameter). Only when something goes
terribly …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/basic-api-features-errors.html</guid><category>basic api features</category></item><item><title>Basic Api Features: Extended Properties</title><link>/basic-api-features-extended-properties.html</link><description>&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;The reality of all enterprise platforms is the need to customize the data
model. To accommodate this, OrderCloud.io designed a property called Extended
Properties (XP) to allow enterprise customization of the OrderCloud data
model. OrderCloud.io exposes the &lt;code&gt;{ xp: {} }&lt;/code&gt; property on most resources
allowing you to apply JSON …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/basic-api-features-extended-properties.html</guid><category>basic api features</category></item><item><title>Basic Api Features: Filtering</title><link>/basic-api-features-filtering.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;Most OrderCloud.io Resources include a method for listing items from that
Resource. The items from such a call could very well be in the thousands so
being able to narrow down the range of the items returned is critical, this
can be done with the use of filters …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/basic-api-features-filtering.html</guid><category>basic api features</category></item><item><title>Basic Api Features: Http Methods</title><link>/basic-api-features-http-methods.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;A resource is a set of endpoints used to interact with an object of that same
name. OrderCloud.io adheres to RESTful conventions in its usage of HTTP verbs.
You can expect a subset of the following methods to exist on every Resource.&lt;/p&gt;
&lt;h2&gt;__HTTP Methods&lt;/h2&gt;
&lt;table&gt;  
&lt;tr&gt;  
&lt;th&gt;

OrderCloud.io Verb

&lt;/th&gt;  
&lt;th&gt;

HTTP …&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/basic-api-features-http-methods.html</guid><category>basic api features</category></item><item><title>Basic Api Features: Pagination</title><link>/basic-api-features-pagination.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;Most OrderCloud.io Resources include a method for listing items from that
Resource. These resources can potentially include thousands of items so
restricting the data that is returned from such a request is not only
practical but necessary. OrderCloud.io offers server-side pagination that
partitions the data returned from …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/basic-api-features-pagination.html</guid><category>basic api features</category></item><item><title>Basic Api Features: Searching</title><link>/basic-api-features-searching.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;Searching data client side can be fine for smaller sets of data but can
quickly become unwieldy with large sets of data. To address this issue our API
supports server side search queries that do all of the heavy lifting for you.&lt;/p&gt;
&lt;h2&gt;__Searching&lt;/h2&gt;
&lt;p&gt;For open-ended, Google-esque searches, simply provide …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/basic-api-features-searching.html</guid><category>basic api features</category></item><item><title>Basic Api Features: Sorting</title><link>/basic-api-features-sorting.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;Most OrderCloud.io Resources include a method for listing items from that
Resource. The results returned from a list method have a default sort order,
but you can also specify a sort order. Properties marked as “Sortable” in the
API Reference can be sorted on.&lt;/p&gt;
&lt;h2&gt;__Sorting&lt;/h2&gt;
&lt;p&gt;Perhaps you want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/basic-api-features-sorting.html</guid><category>basic api features</category></item><item><title>Core Concepts: Assignments</title><link>/core-concepts-assignments.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;There are basic principles around how assignments work that are critical to
understanding our data model and more importantly how the data model can be
applied to solve the most complex ordering scenarios.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assignments are used to define relationships&lt;/li&gt;
&lt;li&gt;Assignments are inclusive&lt;/li&gt;
&lt;li&gt;Assignments can be made at different levels …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/core-concepts-assignments.html</guid><category>core concepts</category></item><item><title>Core Concepts: Rules Engine</title><link>/core-concepts-rules-engine.html</link><description>&lt;h2&gt;__Introduction&lt;/h2&gt;
&lt;p&gt;What’s a rules engine? It’s a system that executes rules. Okay...so what’s a
rule? In its simplest form, it’s an if-then statement that is provided from
the outside, rather than being “baked in” to the engine itself. In the case of
OrderCloud.io, we …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/core-concepts-rules-engine.html</guid><category>core concepts</category></item><item><title>Csharp: Getting Started</title><link>/csharp-getting-started.html</link><description>&lt;h4&gt;We are currently updating and enhancing our C# SDK. When that work is&lt;/h4&gt;
&lt;p&gt;complete, we'll publish an updated guide here. In the meantime, you can still
use our &lt;a href="https://github.com/ordercloud-api/OrderCloud-CSharp-
SDK"&gt;existing C# SDK&lt;/a&gt;. Please don't hesitate to contact us with any questions.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/csharp-getting-started.html</guid><category>csharp</category></item><item><title>Getting Started: Introduction To Ordercloud</title><link>/getting-started-introduction-to-ordercloud.html</link><description>&lt;h2&gt;__What is OrderCloud.io?&lt;/h2&gt;
&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;OrderCloud.io is a cloud-hosted B2B eCommerce platform exposed entirely via a
RESTful API. It enables rapid development of custom, secure, and scalable B2B
eCommerce solutions. Spin up a fully functional B2B app in minutes and
customize it to limits of your imagination.&lt;/p&gt;
&lt;h3&gt;Benefits of …&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/getting-started-introduction-to-ordercloud.html</guid><category>getting started</category></item><item><title>Getting Started: Quick Start Guide</title><link>/getting-started-quick-start-guide.html</link><description>&lt;h2&gt;__Getting Started with OrderCloud.io&lt;/h2&gt;
&lt;p&gt;OrderCloud.io is a RESTful API that enables you to create complex, custom B2B
eCommerce solutions.&lt;/p&gt;
&lt;p&gt;This guide is meant to get you started with OrderCloud.io as quickly as
possible. In order to accomplish this, we’ve stripped away some of the detail,
so …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/getting-started-quick-start-guide.html</guid><category>getting started</category></item><item><title>Getting Started: Using The Api Console</title><link>/getting-started-using-the-api-console.html</link><description>&lt;h2&gt;__Introduction&lt;/h2&gt;
&lt;p&gt;The OrderCloud.io API Console provides instant access to your OrderCloud
applications. It is extremely useful for rapidly spinning up some data to
develop against or learning about all the different endpoints OrderCloud.io
has to offer.&lt;/p&gt;
&lt;h2&gt;__Getting to the Console&lt;/h2&gt;
&lt;p&gt;The console is available at console.ordercloud.io …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/getting-started-using-the-api-console.html</guid><category>getting started</category></item><item><title>Getting Started: Using The Dashboard</title><link>/getting-started-using-the-dashboard.html</link><description>&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;The OrderCloud.io Dashboard is the central hub for managing your OrderCloud
organizations and applications. This guide is meant to help you understand all
the tools available to you and your team while creating and maintaining
amazing B2B eCommerce solutions.&lt;/p&gt;
&lt;p&gt;You will not be able to view the Dashboard …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/getting-started-using-the-dashboard.html</guid><category>getting started</category></item><item><title>Shippingrates: Configuring Catalog</title><link>/shippingrates-configuring-catalog.html</link><description>&lt;h2&gt;__Configuring Catalog Overview&lt;/h2&gt;
&lt;p&gt;In order to be considered when estimating shipping rates, products and their
price schedules will need a few things set up first.&lt;/p&gt;
&lt;h2&gt;__ApplyShipping&lt;/h2&gt;
&lt;p&gt;First, &lt;code&gt;ApplyShipping&lt;/code&gt; will need to be set to true on the price schedule
assigned to the product. Any Line Items containing Products without this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/shippingrates-configuring-catalog.html</guid><category>shippingrates</category></item><item><title>Shippingrates: Configuring Integration</title><link>/shippingrates-configuring-integration.html</link><description>&lt;h2&gt;__Creating Configuration&lt;/h2&gt;
&lt;p&gt;To configure your integration, navigate to the Dashboard Dashboard
Integrations page within OrderCloud.io and select Shipping Rates.&lt;/p&gt;
&lt;h3&gt;Selecting Carriers&lt;/h3&gt;
&lt;p&gt;First, select which carriers you would like shipping rate estimates returned
from. Current options include USPS and UPS. If UPS or FedEx are selected, you
have the option …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/shippingrates-configuring-integration.html</guid><category>shippingrates</category></item><item><title>Shippingrates: Get Line Item Rates</title><link>/shippingrates-get-line-item-rates.html</link><description>&lt;h2&gt;__Get Line Item Rates Overview&lt;/h2&gt;
&lt;p&gt;The next method available within the OrderCloud.io Shipping Rates integration
is &lt;em&gt;GetLineItemRates&lt;/em&gt;. This method will obtain shipping rate estimates from
the carriers selected in your integration configuration for each individual
Line Item in your order based on the item’s product weight, but regardless …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/shippingrates-get-line-item-rates.html</guid><category>shippingrates</category></item><item><title>Shippingrates: Get Rates</title><link>/shippingrates-get-rates.html</link><description>&lt;h2&gt;__Get Rates Overview&lt;/h2&gt;
&lt;p&gt;The first method available within the OrderCloud.io Shipping Rates integration
is &lt;em&gt;GetRates&lt;/em&gt;. This method will group together Line Items on an Order based on
the Line Items' &lt;code&gt;ShippingAddress&lt;/code&gt; and the Line Item Products'
&lt;code&gt;ShipFromAddressID&lt;/code&gt;, calculate the total weight of each shipment based on the
included Products' …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/shippingrates-get-rates.html</guid><category>shippingrates</category></item><item><title>Shippingrates: Overview</title><link>/shippingrates-overview.html</link><description>&lt;h2&gt;__Shipping Rates Overview&lt;/h2&gt;
&lt;p&gt;OrderCloud.io offers the ability to provide weight-based shipping rate
estimates within your storefronts based on the commercial shipping rates.
Supported carriers within this integration currently include USPS, UPS, and
FedEx.&lt;/p&gt;
&lt;p&gt;Once configured, the OrderCloud.io Shipping Rates integration offers three
methods: &lt;em&gt;GetRates&lt;/em&gt; , &lt;em&gt;GetLineItemRates&lt;/em&gt; , and &lt;em&gt;SetShippingCost&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;GetRates …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/shippingrates-overview.html</guid><category>shippingrates</category></item><item><title>Shippingrates: Set Shipping Cost</title><link>/shippingrates-set-shipping-cost.html</link><description>&lt;h2&gt;__Set Shipping Cost Overview&lt;/h2&gt;
&lt;p&gt;Once a user selects their desired shipper(s) for their order, the
&lt;code&gt;ShippingCost&lt;/code&gt; on the Order can be set via the &lt;em&gt;SetShippingCost&lt;/em&gt; method. This
method will patch the Order with the provided &lt;code&gt;ShippingCost&lt;/code&gt; value and return
the updated Order.&lt;/p&gt;
&lt;h2&gt;__Set Shipping Cost Request&lt;/h2&gt;
&lt;h2&gt;__Set Shipping Cost …&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">OrderCloud.io</dc:creator><pubDate>Mon, 19 Mar 2018 15:32:44 +0000</pubDate><guid isPermaLink="false">tag:None,2018-03-19:/shippingrates-set-shipping-cost.html</guid><category>shippingrates</category></item></channel></rss>