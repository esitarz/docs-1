<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>OrderCloud Documentation</title><link href="https://ordercloud-api.github.io/docs/" rel="alternate"></link><link href="https://ordercloud-api.github.io/docs/feeds/platform-guides/core-concepts.atom.xml" rel="self"></link><id>https://ordercloud-api.github.io/docs/</id><updated>2018-03-19T15:32:44-05:00</updated><entry><title>Assignments</title><link href="https://ordercloud-api.github.io/docs/platform-guides/core-concepts/assignments.html" rel="alternate"></link><published>2018-03-19T15:32:44-05:00</published><updated>2018-03-19T15:32:44-05:00</updated><author><name>OrderCloud.io</name></author><id>tag:ordercloud-api.github.io,2018-03-19:/docs/platform-guides/core-concepts/assignments.html</id><summary type="html">&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;There are basic principles around how assignments work that are critical to
understanding our data model and more importantly how the data model can be
applied to solve the most complex ordering scenarios.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assignments are used to define relationships&lt;/li&gt;
&lt;li&gt;Assignments are inclusive&lt;/li&gt;
&lt;li&gt;Assignments can be made at different levels …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;There are basic principles around how assignments work that are critical to
understanding our data model and more importantly how the data model can be
applied to solve the most complex ordering scenarios.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assignments are used to define relationships&lt;/li&gt;
&lt;li&gt;Assignments are inclusive&lt;/li&gt;
&lt;li&gt;Assignments can be made at different levels depending on the resource&lt;/li&gt;
&lt;li&gt;Assignments may include configuration data&lt;/li&gt;
&lt;li&gt;Assignments cascade down higher levels to the individual user (except pricing)&lt;/li&gt;
&lt;li&gt;Assignments are many to many&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;__Assignments are Used to Define Relationships&lt;/h2&gt;
&lt;p&gt;When you are saving an assignment you are creating a relationship between a
single resource (address, spending account, etc.) and a buyer party(user, user
group, or buyer company). There is one exception to this binary rule, which is
product assignment. The product assignment is a three-way association between
a product, a buyer party and a price schedule.&lt;/p&gt;
&lt;h2&gt;__Assignments are Inclusive&lt;/h2&gt;
&lt;p&gt;When a buyer user is created they exist in a vacuum. The user will not have
access to any objects until an assignment is made to them directly, or through
a higher level party assignment.&lt;/p&gt;
&lt;h2&gt;__Assignments Can be Made at Different Levels&lt;/h2&gt;
&lt;p&gt;Assignments can be made to either the entire buyer company, a specific group
of users (UserGroup) within that buyer company or for some resources a single
buyer user.&lt;/p&gt;
&lt;p&gt;You may notice that some assignments contain configuration options. These
options allow you to provide additional information about the assignment. For
example, when assigning an address to a user, you can set IsShipping &amp;amp;
IsBilling, these properties control whether the address can be used as a
shipping and/or billing address on an order.&lt;/p&gt;
&lt;h2&gt;__Assignments Cascade Down Higher Levels to the Individual User&lt;/h2&gt;
&lt;p&gt;When the platform is looking for what a given buyer user has access to, it is
checking for assignments. If an assignment is made to a buyer then all the
users that exist in that buyer organization have access to the assigned
object. The same principle applies to user groups and their constituent users.
Regardless of where an assignment is saved, all of these objects are presented
to the buyer user seamlessly and in a very flat structure.&lt;/p&gt;
&lt;p&gt;The three-way product assignment is the exception to this, in that case the
most specific pricing assignment will apply. For example, if you have a
product assignment at the buyer level, but you would like a specific group of
users to have different pricing, you could make an additional product
assignment that included a UserGroupID and users assigned to that group would
no longer see the buyer level pricing.&lt;/p&gt;
&lt;p&gt;The scenario you’ll want to avoid is a user with multiple product assignments
of the same specificity party level (e.g. a user belonging to two user groups,
each with different product assignments). While the platform won’t prohibit
you from making these potentially problematic assignments, the pricing
returned for any user belonging to multiple pricing groups will always be
indeterminate.&lt;/p&gt;
&lt;h2&gt;__Assignments are Many to Many&lt;/h2&gt;
&lt;p&gt;Resources can be assigned to many different buyer parties. Those buyer parties
can be assigned to many other resources. For example, one user can be assigned
to multiple address while one address can be assigned to multiple users.&lt;/p&gt;</content><category term="core concepts"></category></entry><entry><title>Rules Engine</title><link href="https://ordercloud-api.github.io/docs/platform-guides/core-concepts/rules-engine.html" rel="alternate"></link><published>2018-03-19T15:32:44-05:00</published><updated>2018-03-19T15:32:44-05:00</updated><author><name>OrderCloud.io</name></author><id>tag:ordercloud-api.github.io,2018-03-19:/docs/platform-guides/core-concepts/rules-engine.html</id><summary type="html">&lt;h2&gt;__Introduction&lt;/h2&gt;
&lt;p&gt;What’s a rules engine? It’s a system that executes rules. Okay...so what’s a
rule? In its simplest form, it’s an if-then statement that is provided from
the outside, rather than being “baked in” to the engine itself. In the case of
OrderCloud.io, we …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;__Introduction&lt;/h2&gt;
&lt;p&gt;What’s a rules engine? It’s a system that executes rules. Okay...so what’s a
rule? In its simplest form, it’s an if-then statement that is provided from
the outside, rather than being “baked in” to the engine itself. In the case of
OrderCloud.io, we’ll define the “thens” (starting with “order requires
approval”) and allow you to define the “ifs” via custom &lt;strong&gt;logic expressions&lt;/strong&gt;.
Effectively, we’re going to allow you to extend platform behavior in much the
same way xp allows you to extend the data model.&lt;/p&gt;
&lt;p&gt;Here is an example:&lt;/p&gt;
&lt;p&gt;Say you want every order over $200 with some specific xp value to require
approval from a manager. You would first create a UserGroup containing all
approving managers, then create a new ApprovalRule, set the ApprovingGroupID,
and set the Expression to this:&lt;/p&gt;
&lt;h2&gt;__Supported Operations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;order&lt;/code&gt; supports the same properties as the Order model returned from /orders API endpoints, including xp.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt; comparison operators are supported.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;not&lt;/code&gt; logical operators are supported&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;,&lt;code&gt;*&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; mathematical operators are supported&lt;/li&gt;
&lt;li&gt;String values must be enclosed in single quotes.&lt;/li&gt;
&lt;li&gt;Date values must be enclosed in # symbols, i.e #5/15/2016#&lt;/li&gt;
&lt;li&gt;Parentheses may be used to enclose sub-expressions and control order of execution.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;__Line Item Control&lt;/h2&gt;
&lt;p&gt;What about line items? Glad you asked, because which products are being
purchased, in what quantities, charged against which cost centers, etc, are
very common in the world of approval rules. But line items are a collection,
so we turn to aggregate functions to inspect them. Here’s how you would
require approval on all orders over $200 charged to cost center ABC:&lt;/p&gt;
&lt;p&gt;That’s pretty powerful, but it’s more likely that you only care about the
&lt;em&gt;subtotal&lt;/em&gt; of just the line items matching your CostCenter condition. For this
you can use the &lt;code&gt;items.total&lt;/code&gt; function:&lt;/p&gt;
&lt;p&gt;The condition inside the function (called a filter) can be more complex and
contain &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, etc. just like other parts of the expression:&lt;/p&gt;
&lt;p&gt;It also has access to a special filter that allows you check whether a product
is in a certain category:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;items&lt;/code&gt; supports a total of four functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;items.any&lt;/code&gt; (true if any item matches filter)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;items.all&lt;/code&gt; (true if all item matches filter)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;items.quantity&lt;/code&gt; (compare result to a number)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;items.total&lt;/code&gt; (compare result to a dollar amount)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and one special filter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;product.incategory('mycustomcategory')&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;__ComplexApprovals&lt;/h2&gt;
&lt;p&gt;Speaking of functions, there is one defined on &lt;code&gt;order&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;This one’s powerful, because it allows you to set up multi-level approval
workflows by chaining rules together. For example, in a larger organization,
getting the approval from a department manager might not be enough, and a
higher-level VP must also sign off.&lt;/p&gt;
&lt;p&gt;All valid elements of rule expressions can be mixed &amp;amp; matched as needed,
allowing for very sophisticated rules to be supported:&lt;/p&gt;
&lt;p&gt;A word of caution: Rules are easy to write and very powerful, but can be very
tricky to debug when they don’t work quite like you thought they would. Don’t
get more fancy with them than you need to. As always, we’re here to help if
you need guidance.&lt;/p&gt;
&lt;h2&gt;__Where to go from here?&lt;/h2&gt;
&lt;p&gt;You can also leverage the power of the rules engine to create custom
Promotions. Both the promotion EligibleExpression and ValueExpression accept
expressions just like the ones described above. Here are some other things we
may leverage the rules engine for in the future:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Custom validation (upon creating/editing things)&lt;/li&gt;
&lt;li&gt;Time-based approval rules (aggregated totals over past week/month/quarter, etc.)&lt;/li&gt;
&lt;li&gt;Applying discounts/markups&lt;/li&gt;
&lt;li&gt;Replenish inventory&lt;/li&gt;
&lt;li&gt;Fire off a notification via webhooks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’d love to get your thoughts on these ideas. Look for significant
enhancements to the rules engine and new applications of it in the months
ahead.&lt;/p&gt;</content><category term="core concepts"></category></entry></feed>