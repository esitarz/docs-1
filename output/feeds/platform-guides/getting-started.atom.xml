<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>OrderCloud Documentation</title><link href="https://ordercloud-api.github.io/docs/" rel="alternate"></link><link href="https://ordercloud-api.github.io/docs/feeds/platform-guides/getting-started.atom.xml" rel="self"></link><id>https://ordercloud-api.github.io/docs/</id><updated>2018-03-19T15:32:44-05:00</updated><entry><title>Introduction To Ordercloud</title><link href="https://ordercloud-api.github.io/docs/platform-guides/getting-started/introduction-to-ordercloud.html" rel="alternate"></link><published>2018-03-19T15:32:44-05:00</published><updated>2018-03-19T15:32:44-05:00</updated><author><name>OrderCloud.io</name></author><id>tag:ordercloud-api.github.io,2018-03-19:/docs/platform-guides/getting-started/introduction-to-ordercloud.html</id><summary type="html">&lt;h2&gt;__What is OrderCloud.io?&lt;/h2&gt;
&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;OrderCloud.io is a cloud-hosted B2B eCommerce platform exposed entirely via a
RESTful API. It enables rapid development of custom, secure, and scalable B2B
eCommerce solutions. Spin up a fully functional B2B app in minutes and
customize it to limits of your imagination.&lt;/p&gt;
&lt;h3&gt;Benefits of …&lt;/h3&gt;</summary><content type="html">&lt;h2&gt;__What is OrderCloud.io?&lt;/h2&gt;
&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;OrderCloud.io is a cloud-hosted B2B eCommerce platform exposed entirely via a
RESTful API. It enables rapid development of custom, secure, and scalable B2B
eCommerce solutions. Spin up a fully functional B2B app in minutes and
customize it to limits of your imagination.&lt;/p&gt;
&lt;h3&gt;Benefits of a RESTful API&lt;/h3&gt;
&lt;p&gt;Whether it’s the central hub of a mobile purchasing app or one small piece of
a larger microservices-based solution, the benefits of a RESTful API vs. other
approaches are clear.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://ordercloud-api.github.io/docs/images/docs-guides/getting-started/intro/agnostic.jpg"&gt;&lt;/p&gt;
&lt;p&gt;OrderCloud.io enables developers to use their tech stack of choice. Plus,
releases are automatic and non-breaking; there’s a clear, inherent boundary
between our code and yours.&lt;/p&gt;
&lt;p&gt;Nearly all modern web and mobile front-end frameworks are designed to work
well out of the box with JSON-over-HTTP services that follow RESTful patterns.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="" src="https://ordercloud-api.github.io/docs/images/docs-guides/getting-started/intro/scale.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Unlike on-premise solutions, server infrastructure and data security are taken
care of for you. Start small and scale up only as your business usage grows.&lt;/p&gt;
&lt;p&gt;Unlike SaaS products, your ability to customize user interfaces and workflows
is virtually limitless.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;OrderCloud.io plays nicely with other similarly architected services. We are
entering the age of
&lt;a href="http://martinfowler.com/articles/microservices.html"&gt;microservices&lt;/a&gt;, where
best-of-breed solutions are not built from scratch. Rather, they are assembled
from the best parts. Our "part" is B2B eCommerce and Order Management, a
complex domain in which we have spent {{documentation.yearsSinceFounding}}
years building and refining an incredibly rich and flexible data model.&lt;/p&gt;
&lt;h2&gt;__How OrderCloud.io Supports Complex B2B eCommerce&lt;/h2&gt;
&lt;h3&gt;Buyer Organizations and Contracts&lt;/h3&gt;
&lt;p&gt;In B2B, buyer organizations matter more than in B2C. The seller typically
establishes a relationship with the buyer long before the first order is ever
placed. Product catalogs and pricing specific to that buyer are pre-agreed
upon. Users, shipping addresses, cost centers, payment methods, and other
“things” within the organization are generally configured ahead of time.&lt;/p&gt;
&lt;p&gt;OrderCloud.io provides rich support for modeling a typical B2B buyer
organization. Products can be created once and made available for purchase to
any number of buyers, but details such as pricing, inventory, specs, and other
configuration details can be customized per buyer according to their specific
contract.&lt;/p&gt;
&lt;h3&gt;Organizational Structure, Roles, and Visibility&lt;/h3&gt;
&lt;p&gt;People within the buyer organization may play different roles in the
purchasing process and see different things. If one user places an order over
a certain amount, it may require approval from their manager. Another user in
a branch office may only see that office’s address in their shipping options.
Still another may have the ability to administer users, addresses, or even
products.&lt;/p&gt;
&lt;p&gt;OrderCloud.io provides fine-grained control over specific roles and
visibility. Roles and “things” belonging to the organization are assigned at
user, group, or organization level. Groups provide a powerful and flexible way
to organize users by role, department, location, or any other set of common
traits. Users can belong to any number of groups, and will “inherit” roles and
visibility of things based on their group memberships. This greatly simplifies
administration as the number of users in the organization grows.&lt;/p&gt;
&lt;h3&gt;Custom (But Fast) Buying Experience&lt;/h3&gt;
&lt;p&gt;Multi-tiered assignments of roles and other things comprise a powerful
mechanism for customizing the buyer experience down to the individual user.
But once configured, the shopper (and developer for that matter) wants a fast
and intuitive experience that’s more concerned with what they see than how
they see it.&lt;/p&gt;
&lt;p&gt;OrderCloud.io provides a group of endpoints, commonly referred to as the
&lt;strong&gt;Me&lt;/strong&gt; routes, whose main job it is to flatten these assignments and “just
show me what I can see”, regardless of how the assignments are made
(user/group/organization level). The Me routes greatly simplify the process of
building out the custom buying experience.&lt;/p&gt;
&lt;h3&gt;Complex Products and Pricing&lt;/h3&gt;
&lt;p&gt;Products in the B2B world often come with more detailed specs, configuration
options, and pricing than are typical in B2C.&lt;/p&gt;
&lt;p&gt;OrderCloud.io provides the ability to accurately model:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Different pricing for different buyer organizations (or different groups or users within the same organization) &lt;/li&gt;
&lt;li&gt;Buyer-specific variants of the same product&lt;/li&gt;
&lt;li&gt;Quantity based discounts&lt;/li&gt;
&lt;li&gt;Markups/markdowns tied to product buying options, or combinations of options that drive the user to unique SKUs &lt;/li&gt;
&lt;li&gt;Rules-driven promotions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Complex Ordering Processes&lt;/h3&gt;
&lt;p&gt;In B2B, order flow isn’t always as simple as a buyer submitting an order and a
seller fulfilling it. On the buyer side, the order may need to go through a
multi-tier approval process. The rules around what conditions require an
approval (user, order total, specific products, quantities, etc.), who is
allowed to approve, and at what stage in the workflow, can get complex.&lt;/p&gt;
&lt;p&gt;OrderCloud.io’s built-in rules engine allows you to express these rules as
formulas that get evaluated each time an order is submitted or approved. When
an approval triggers no further rules, the order is passed on to the seller.&lt;/p&gt;
&lt;h3&gt;Assisted Ordering&lt;/h3&gt;
&lt;p&gt;Among the primary goals of any eCommerce system are automation and empowering
the buyer. But in B2B, sometimes there’s no substitute for the personalized
service afforded by CSRs (Customer Service Representatives) at call centers.&lt;/p&gt;
&lt;p&gt;OrderCloud.io provides a clear method of impersonating a buyer user. This
allows the CSR to see exactly what that specific user sees and place orders on
their behalf, while protecting sensitive information such as passwords.&lt;/p&gt;
&lt;h3&gt;Integrations&lt;/h3&gt;
&lt;p&gt;Integrating with ERP, CRM, and other external systems is a highly desired
capability in B2B on both the buyer and seller side. The ability to automate
data exchange between these systems and the commerce platform greatly reduces
the costs and errors associated with manual data entry.&lt;/p&gt;
&lt;p&gt;As a RESTful API, OrderCloud.io lends itself equally well to back-end
integrations as it does front-end apps. Webhooks are a powerful mechanism that
allow middleware platforms and custom server applications to subscribe to
events (also via HTTP/JSON but in the reverse direction) that occur within
OrderCloud.io, such as order submitted, item shipped, product changed, etc..&lt;/p&gt;
&lt;h2&gt;__Feature Rich API&lt;/h2&gt;
&lt;p&gt;The OrderCloud.io API has some standard conventions that permeate the entire
platform. You can expect these features to behave the same no matter which
resource you're working with.&lt;/p&gt;
&lt;h3&gt;__SSL&lt;/h3&gt;
&lt;p&gt;API access is only allowed via HTTPS; connections on port 80 are refused
entirely.&lt;/p&gt;
&lt;h3&gt;__JSON Everywhere&lt;/h3&gt;
&lt;p&gt;UTF-8 encoded JSON is the only supported data format for both request and
response payloads.&lt;/p&gt;
&lt;h3&gt;__OAuth 2.0&lt;/h3&gt;
&lt;p&gt;OrderCloud.io API authentication is based on the OAuth 2 specification and
supports multiple workflows.&lt;/p&gt;
&lt;h3&gt;Writable IDs&lt;/h3&gt;
&lt;p&gt;Writable IDs allow you to define the unique identifier of each resource. This
capability eliminates the need to define a master record in your integration.
Your integration efforts are reduced and the opportunity to avoid a mapping
middleware is available. We also offer what we call an incrementor, which is
used to add an atomically incremented number to your object IDs. For example
with the proper configuration, "aprefix-{myIncrementorID}", will yield an
order ID of aprefix-10010.&lt;/p&gt;
&lt;h3&gt;XP&lt;/h3&gt;
&lt;p&gt;We recognize that OrderCloud.io’s core data model can’t cover every
conceivable scenario. Predicting every column in every table that your
hypothetical database might need is impractical. That’s why we created our own
schema-less solution with Extended Properties (most commonly referred to as
“xp”) and exposed it on virtually every API resource. For example, our User
model doesn’t define a Gender attribute, but you can easily add one if you
need it:&lt;/p&gt;
&lt;p&gt;And later you can get a list of all users that are male&lt;/p&gt;
&lt;h3&gt;Advanced Querying&lt;/h3&gt;
&lt;p&gt;Most list endpoints support searching, sorting, filtering, and all list
endpoints support pagination.&lt;/p&gt;
&lt;h3&gt;Webhooks&lt;/h3&gt;
&lt;p&gt;Webhooks allow you to subscribe to any event on any API endpoint. When a
webhook is triggered, a JSON payload will be sent to the configured webhook
URL. They can be used to perform follow up tasks such as updating an external
CRM system when a user updates their profile, or send an email through a 3rd
party system when an order is submitted. Webhooks are fundamentally designed
to provide maximum flexibility within the integrated solution.&lt;/p&gt;
&lt;h2&gt;__Security&lt;/h2&gt;
&lt;p&gt;If facilitating billions of dollars worth of transactions over
{{documentation.yearsSinceFounding}} years in business has taught us one
thing, it's that no shortcuts can be taken when it comes to security. We are
SOC 2 type II and HIPAA Security Rule compliant, and we support the PCI
compliance of applications accessing our API through appropriate security
controls and by using PCI validated platform partners. User credentials are
one-way encrypted such that in the unlikely event of a data breach, they would
be useless. All HTTP traffic is over SSL.&lt;/p&gt;
&lt;p&gt;Authentication is handled by an API independent of the core platform. It
implements four different flows defined by the OAuth2 standard. Access to
specific endpoints and functionality can be restricted at a very granular
level via roles, which are aggregated to form security profiles, which can be
assigned (like many other things) at the company, group, or user level.&lt;/p&gt;
&lt;h2&gt;__Collaboration&lt;/h2&gt;
&lt;p&gt;OrderCloud makes it incredibly easy to collaborate with other developers by
adding them as contributors through the Dashboard. Adding a contributor
developer is as easy as obtaining the email address they used to sign up with
on DevCenter. You can even define how much access you would like them to have
within any given seller organization.&lt;/p&gt;</content><category term="getting started"></category></entry><entry><title>Quick Start Guide</title><link href="https://ordercloud-api.github.io/docs/platform-guides/getting-started/quick-start-guide.html" rel="alternate"></link><published>2018-03-19T15:32:44-05:00</published><updated>2018-03-19T15:32:44-05:00</updated><author><name>OrderCloud.io</name></author><id>tag:ordercloud-api.github.io,2018-03-19:/docs/platform-guides/getting-started/quick-start-guide.html</id><summary type="html">&lt;h2&gt;__Getting Started with OrderCloud.io&lt;/h2&gt;
&lt;p&gt;OrderCloud.io is a RESTful API that enables you to create complex, custom B2B
eCommerce solutions.&lt;/p&gt;
&lt;p&gt;This guide is meant to get you started with OrderCloud.io as quickly as
possible. In order to accomplish this, we’ve stripped away some of the detail,
so …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;__Getting Started with OrderCloud.io&lt;/h2&gt;
&lt;p&gt;OrderCloud.io is a RESTful API that enables you to create complex, custom B2B
eCommerce solutions.&lt;/p&gt;
&lt;p&gt;This guide is meant to get you started with OrderCloud.io as quickly as
possible. In order to accomplish this, we’ve stripped away some of the detail,
so keep an eye out for links to relevant guides that provide much more in-
depth explanations.&lt;/p&gt;
&lt;h2&gt;__Creating an Account&lt;/h2&gt;
&lt;p&gt;The first thing you will need to do is create an account. Registration is free
and gives you access to the entire OrderCloud.io platform.&lt;/p&gt;
&lt;p&gt;After you submit your email address, you will be sent a verification code
which will be required to complete the registration process.&lt;/p&gt;
&lt;h2&gt;__Your First Seller Organization&lt;/h2&gt;
&lt;p&gt;Now that you have an OrderCloud.io account you can navigate to your
&lt;a href="https://dashboard.ordercloud.io"&gt;dashboard&lt;/a&gt; and access your first seller
organization.&lt;/p&gt;
&lt;p&gt;It is the highest level container that encompasses everything else in
OrderCloud.io (applications, products, pricing, users, etc.). You can have
multiple Seller Organizations; however, data is not shared between them.&lt;/p&gt;
&lt;p&gt;Newly created Seller Organizations come with a "default access" application
giving you immediate access to the API however you can also create your own.
To do this first click on the seller applications pane on the left and then
click the  __New button located in the upper right hand corner.&lt;/p&gt;
&lt;p&gt;Using the API Console is the simplest way to start exploring OrderCloud.io;
however, understanding the fundamentals of how to access and use the API on
it's own is extremely important for any OrderCloud.io developer.&lt;/p&gt;
&lt;h2&gt;__Authentication&lt;/h2&gt;
&lt;p&gt;Before you are able to interact with the OrderCloud.io API you will need to
get an &lt;code&gt;access_token&lt;/code&gt; from the auth server. The following sections will
include raw request and response examples to the OAuth API.&lt;/p&gt;
&lt;p&gt;The first thing you need is the &lt;code&gt;ClientID&lt;/code&gt;. This unique identifier represents
a single application on OrderCloud.io. Feel free to use the ClientID from the
"default access" application that was automatically created on your first
Seller Organization.&lt;/p&gt;
&lt;p&gt;![](/{filename}/images/docs-guides/getting-started/quick-start-guide/quick-start-
guide-1.jpg)&lt;/p&gt;
&lt;p&gt;The second thing you will need is a list of roles, or in OAuth terms, scope.
For this example you are not authenticating as an actual user (because we
haven't created one yet). Instead, you will be taking advantage of a useful
developer role, &lt;code&gt;DevCenterImpersonate&lt;/code&gt;". This role will allow you to use the
password grant type workflow with your own Dev Center username and password.&lt;/p&gt;
&lt;p&gt;Along with our special DevCenterImpersonate role we will also request
"FullAccess". Being the owners of this Organization it's safe to say we can
access and change any data related to it. Giving real users "FullAccess" is
highly discouraged, a subset of roles helps protect your application from
malicious attacks or oblivious users.&lt;/p&gt;
&lt;p&gt;Using your ClientID, roles list, and Dev Center username/password, request an
access token following the example below:&lt;/p&gt;
&lt;p&gt;Request&lt;/p&gt;
&lt;p&gt;Response&lt;/p&gt;
&lt;h2&gt;__Subsequent Requests&lt;/h2&gt;
&lt;p&gt;Using the access_token from the OAuth response make your first &lt;code&gt;GET&lt;/code&gt; request
to the UserPerspecive -&amp;gt; Me -&amp;gt; Get endpoint. This will return the details for
the currently authenticated user. (In this case, you will appear as the
default user because we authenticated as a developer). Make sure you put your
&lt;code&gt;access_token&lt;/code&gt; in the Authentication header before making the request.&lt;/p&gt;
&lt;p&gt;Request&lt;/p&gt;
&lt;p&gt;Response&lt;/p&gt;</content><category term="getting started"></category></entry><entry><title>Using The Api Console</title><link href="https://ordercloud-api.github.io/docs/platform-guides/getting-started/using-the-api-console.html" rel="alternate"></link><published>2018-03-19T15:32:44-05:00</published><updated>2018-03-19T15:32:44-05:00</updated><author><name>OrderCloud.io</name></author><id>tag:ordercloud-api.github.io,2018-03-19:/docs/platform-guides/getting-started/using-the-api-console.html</id><summary type="html">&lt;h2&gt;__Introduction&lt;/h2&gt;
&lt;p&gt;The OrderCloud.io API Console provides instant access to your OrderCloud
applications. It is extremely useful for rapidly spinning up some data to
develop against or learning about all the different endpoints OrderCloud.io
has to offer.&lt;/p&gt;
&lt;h2&gt;__Getting to the Console&lt;/h2&gt;
&lt;p&gt;The console is available at console.ordercloud.io …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;__Introduction&lt;/h2&gt;
&lt;p&gt;The OrderCloud.io API Console provides instant access to your OrderCloud
applications. It is extremely useful for rapidly spinning up some data to
develop against or learning about all the different endpoints OrderCloud.io
has to offer.&lt;/p&gt;
&lt;h2&gt;__Getting to the Console&lt;/h2&gt;
&lt;p&gt;The console is available at console.ordercloud.io and can be navigated to via
the top navigation or by clicking "Open API Console" when viewing an
application in the dashboard. If you navigate directly to the console via the
top navigation, you will be prompted to choose a Seller or Buyer application
before continuing.&lt;/p&gt;
&lt;p&gt;![]({filename}/images/docs-guides/getting-started/using-the-api-console/seller-
and-buyer.png)&lt;/p&gt;
&lt;h2&gt;__Current User&lt;/h2&gt;
&lt;p&gt;When first opening the console, you will notice a black box in the top left
that lets you know the user your are currently authenticated as. By default,
the console will open the application using your developer profile - thereby
making you the seller organization's "Default contact user". &lt;strong&gt;This is not a
real user&lt;/strong&gt; , it is simply there to allow developers access to the API before
any real users have been created.&lt;/p&gt;
&lt;p&gt;![]({filename}/images/docs-guides/getting-started/using-the-api-console/current-
user.png)&lt;/p&gt;
&lt;h2&gt;__Current Context&lt;/h2&gt;
&lt;p&gt;Clicking on the Current User will reveal additional details about your current
"context". This includes the active Seller Organization, Buyer Organization
(if any), and application you currently have open in the console. You can
click the blue links to quickly jump back into the OrderCloud.io Dashboard for
each item.&lt;/p&gt;
&lt;p&gt;By clicking "Change Context" you can open a different OrderCloud application
without ever leaving the API Console.&lt;/p&gt;
&lt;p&gt;![]({filename}/images/docs-guides/getting-started/using-the-api-console/current-
context.png)&lt;/p&gt;
&lt;h2&gt;__Impersonation&lt;/h2&gt;
&lt;p&gt;Due to the limited capabilities of the Default Contact User, we have provided
a handy feature for impersonating a &lt;strong&gt;buyer user&lt;/strong&gt; within your current
context. Within the Current User dropdown you can click "Impersonate User" and
fill out the form to find the buyer user you wish to perform API calls on
behalf of.&lt;/p&gt;
&lt;p&gt;By clicking "Change Context" you can open a different OrderCloud application
without ever leaving the API Console.&lt;/p&gt;
&lt;h2&gt;__Lockable Parameters&lt;/h2&gt;
&lt;p&gt;Sometimes you will be making many successive requests with the same
parameters. To make this easier for you, we included the ability to lock
specific parameter values for the duration of your console session. If you
know you'll always be working with the same buyer, enter the Buyer ID
parameter once, click the lock button and forget about it!&lt;/p&gt;
&lt;p&gt;![]({filename}/images/docs-guides/getting-started/using-the-api-console/lockable-
params.png)&lt;/p&gt;
&lt;h2&gt;__Making Requests&lt;/h2&gt;
&lt;p&gt;Making a request in the API Console is relatively simple. Begin by choosing a
resource from the console menu on the left. Once the resource loads in the
second pane, you can choose the method (endpoint) you would like to use. If
you're not sure which endpoint to use, check out our API Reference for a full
list. If you're following along with our guides, each step will have a link to
the specific endpoint being used.&lt;/p&gt;
&lt;p&gt;Depending on the endpoint, you will be required to fill out some parameters
and/or a request body. When all required parameters have been filled out,
click "Send" and the successful response or error message will appear in the
pane on the right. View previous responses by clicking on the response in the
list above the active response body.&lt;/p&gt;
&lt;h2&gt;__Conclusion&lt;/h2&gt;
&lt;p&gt;The Console eliminates the headache of making authentication requests before
using the OrderCloud API. Use it to dive into your data quickly and make rapid
changes while developing your applications. We're always looking for ways to
improve the experience, so any feedback or suggestions you have as a user of
the platform are greatly appreciated!&lt;/p&gt;</content><category term="getting started"></category></entry><entry><title>Using The Dashboard</title><link href="https://ordercloud-api.github.io/docs/platform-guides/getting-started/using-the-dashboard.html" rel="alternate"></link><published>2018-03-19T15:32:44-05:00</published><updated>2018-03-19T15:32:44-05:00</updated><author><name>OrderCloud.io</name></author><id>tag:ordercloud-api.github.io,2018-03-19:/docs/platform-guides/getting-started/using-the-dashboard.html</id><summary type="html">&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;The OrderCloud.io Dashboard is the central hub for managing your OrderCloud
organizations and applications. This guide is meant to help you understand all
the tools available to you and your team while creating and maintaining
amazing B2B eCommerce solutions.&lt;/p&gt;
&lt;p&gt;You will not be able to view the Dashboard …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;__Overview&lt;/h2&gt;
&lt;p&gt;The OrderCloud.io Dashboard is the central hub for managing your OrderCloud
organizations and applications. This guide is meant to help you understand all
the tools available to you and your team while creating and maintaining
amazing B2B eCommerce solutions.&lt;/p&gt;
&lt;p&gt;You will not be able to view the Dashboard if you haven't created an account.
If you haven't already, register for OrderCloud.io to access your free
account.&lt;/p&gt;
&lt;h2&gt;__Getting to the Dashboard&lt;/h2&gt;
&lt;p&gt;Upon logging in for the first time you will be taken to your account profile
page. Here you can edit your profile information and change your password.&lt;/p&gt;
&lt;p&gt;Below your profile information you should see a &lt;em&gt;"My Seller Organizations"&lt;/em&gt;
tab with a new seller organization called &lt;em&gt;"Default trial company"&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ordercloud-api.github.io/docs/images/docs-guides/getting-started/dashboard/navigation.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Clicking on a seller in this list or creating a new organization will redirect
you to what we call the &lt;strong&gt;OrderCloud.io Dashboard&lt;/strong&gt;. Once you're in the
dashboard you are now working within the context of a &lt;em&gt;single&lt;/em&gt; seller
organization.&lt;/p&gt;
&lt;h2&gt;__Seller Organization Settings&lt;/h2&gt;
&lt;p&gt;This is the page you will land on when opening any organization. The view has
two tabs: &lt;strong&gt;Seller Options&lt;/strong&gt; and &lt;strong&gt;Contributors&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;__Seller Options&lt;/h3&gt;
&lt;p&gt;The organization owner has exclusive permission to change the seller options
including updating the organization name, transferring the org to a
contributing developer, or deleting the seller entirely. If you're a
contributor, you can choose to leave the organization from this view.&lt;/p&gt;
&lt;h3&gt;__Contributors&lt;/h3&gt;
&lt;p&gt;Most B2B eCommerce projects require some level of collaboration. By sharing
your organization with other team members on OrderCloud you can all work
together on a single seller. Once a new contributor is added you can refine
their access to your organization by adjusting their &lt;strong&gt;permissions&lt;/strong&gt; &amp;amp; &lt;strong&gt;data
access&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;Contributor Permissions&lt;/h4&gt;
&lt;p&gt;&lt;img alt="" src="https://ordercloud-api.github.io/docs/images/docs-guides/getting-started/dashboard/permissions.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Each permission controls whether or not a given contributor can access
specific dashboard functionality for your seller organization. For example,
you may have one contributor that is responsible for creating webhooks and
integrations and another who is responsible for setting up security profiles
for your end users.&lt;/p&gt;
&lt;h4&gt;Contributor Data Access&lt;/h4&gt;
&lt;p&gt;&lt;img alt="" src="https://ordercloud-api.github.io/docs/images/docs-guides/getting-started/dashboard/data_access.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Data Access gives you control over which roles (if any) a given contributor
can request when using the OrderCloud API with this seller organization or any
of it's buyer organizations. A contributor with &lt;code&gt;FullAccess&lt;/code&gt; here will have
total control over any of the data under the seller organization. It is
strongly recommended you use a combination of the granular roles that enable
each developer to accomplish their project tasks to avoid unwanted or
unexpected changes to your organization's data. OrderCloud roles are covered
in-depth later in this guide.&lt;/p&gt;
&lt;h2&gt;__Dashboard Features&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="https://ordercloud-api.github.io/docs/images/docs-guides/getting-started/dashboard/features.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The left-hand menu is where you can access each of the dashboard features
available to you for a given seller organization. Some features such as
Message Senders or Integrations will be hidden from this menu if you do not
have permission to access them.&lt;/p&gt;
&lt;p&gt;Beyond these basic navigation items, there is a &lt;em&gt;"Switch Organization"&lt;/em&gt; button
which allows you to quickly change your active seller organization.&lt;/p&gt;
&lt;h2&gt;__Buyer Organizations&lt;/h2&gt;
&lt;p&gt;The OrderCloud Dashboard provides a simple user interface for managing a
seller's buyer organizations. Each buyer organization has a &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;ID&lt;/code&gt;
that are used for interacting with the buyer via the API. A buyer with a
status of &lt;em&gt;"inactive"&lt;/em&gt; is blocked from submitting orders. The Buyer API allows
full control of buyer organizations as well; however, managing the API Clients
of each organization is restricted to the OrderCloud Dashboard.&lt;/p&gt;
&lt;h2&gt;__Applications&lt;/h2&gt;
&lt;p&gt;Seller and Buyer Organizations each have their own set of applications.
Clicking &lt;em&gt;"Seller Applications"&lt;/em&gt; in the left nav will give you a list of
applications that can be used by your organization's Admin Users. Buyer
Applications are visible under each respective Buyer Organization and can be
accessed by the Users under that buyer.&lt;/p&gt;
&lt;h3&gt;Application Settings&lt;/h3&gt;
&lt;p&gt;Opening an individual application will bring you to the &lt;strong&gt;Settings&lt;/strong&gt; tab for
that application. Seller Organization owners and contributors with permission
to administer applications can update application information in this tab and
activate/deactivate the application. Within this tab you’ll find the
following:  &lt;/p&gt;
&lt;table&gt;  
&lt;tr&gt;  
&lt;th&gt;

Client ID

&lt;/th&gt;  
&lt;td&gt;

The unique identifier of an application. This field is read-only and used in
all OAuth2.0 workflows. It is a general rule that one front-end application be
associated with a single Client ID or "application".

&lt;/td&gt; &lt;/tr&gt;  
&lt;tr&gt;  
&lt;th&gt;

Client Secret

&lt;/th&gt;  
&lt;td&gt;

This is an optional elevated level of security. It allows you to require an
additional keyphrase in all authentication requests. It is also used as part
of the Client Credentials Grant Type workflow for anonymous authentication or
back office systems.

&lt;/td&gt; &lt;/tr&gt;  
&lt;tr&gt;  
&lt;th&gt;

Back Office User  
(Seller Applications Only)

&lt;/th&gt;  
&lt;td&gt;

This is for automated systems using a Client Credentials Grant Type. After
following this OAuth2.0 workflow you will appear as this user.

&lt;/td&gt; &lt;/tr&gt;  
&lt;tr&gt;  
&lt;th&gt;

Anonymous Template User  
(Buyer Applications Only)

&lt;/th&gt;  
&lt;td&gt;

This enables anonymous shopping and/or registration on buyer applications. Use
the Client Credentials Grant Type you can authenticate without a password and
you will appear as a temporary user that has the same assignment based
relationships and security as the anonymous template user.

&lt;/td&gt; &lt;/tr&gt;  
&lt;tr&gt;  
&lt;th&gt;

Access Token Duration

&lt;/th&gt;  
&lt;td&gt;

How long (in minutes) an access token will remain valid (max: 600m)

&lt;/td&gt; &lt;/tr&gt;  
&lt;tr&gt;  
&lt;th&gt;

Refresh Token Duration

&lt;/th&gt;  
&lt;td&gt;

How long (in minutes) you are able to obtain a new Access Token (max: 43200m)

&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;

&lt;h3&gt;Active Webhooks&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;"webhooks"&lt;/em&gt; tab is visible to owners and contributors with permission to
administer webhooks. This is where you will enable / disable webhooks for a
given application. Create a webhook once using the Webhooks feature and apply
it to one or many applications using this workflow.&lt;/p&gt;
&lt;h3&gt;Active Integrations&lt;/h3&gt;
&lt;p&gt;The application &lt;em&gt;"integrations"&lt;/em&gt; tab works a lot like the &lt;em&gt;"webhooks"&lt;/em&gt; tab.
Only Seller Organization owners and contributors with permission to administer
integrations will see it. By clicking &lt;em&gt;"add"&lt;/em&gt; you can choose from any of your
configured integration services and apply it to said application.&lt;/p&gt;
&lt;h2&gt;__Security Profiles&lt;/h2&gt;
&lt;p&gt;This feature is available to organization owners and contributors with
permission to administer security. Security Profiles are groupings of roles
that can be later assigned to admin and buyer users using the Security
Profiles API.&lt;/p&gt;
&lt;p&gt;The granular nature of OrderCloud roles enables you to control exactly which
API endpoints and/or data each user can access within your organization
(similar to your contributor's data access!). In general, an &lt;strong&gt;Admin&lt;/strong&gt; role
allows read and write access of a given resource while a &lt;strong&gt;Reader&lt;/strong&gt; role
allows only read access.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ordercloud-api.github.io/docs/images/docs-guides/getting-started/dashboard/security.jpg"&gt;&lt;/p&gt;
&lt;p&gt;It is &lt;strong&gt;strongly discouraged&lt;/strong&gt; and considered a security risk to give your
admin or buyer users the &lt;code&gt;FullAccess&lt;/code&gt; role. While it may be convenient to use
in the early stages of development - it is &lt;strong&gt;always&lt;/strong&gt; better to give end users
a combination of more granular roles that align to the actions they will be
taking in the application.&lt;/p&gt;
&lt;p&gt;If you can't seem to find the role that's right for your users, please
&lt;a href="http://www.ordercloud.io/contact"&gt;contact us&lt;/a&gt; with your request and if deemed
appropriate by our development team, the role will be added to the API.&lt;/p&gt;
&lt;h2&gt;__Extended Properties&lt;/h2&gt;
&lt;p&gt;The Extended Properties (XP) feature was created to improve the performance of
filtered API queries. Instead of automatically indexing any new XP, we ask
developers to define which properties they would like to be indexed
beforehand. Once an XP key is added to this list, relevant Extended Properties
created from that point on will be available for filtering.&lt;/p&gt;
&lt;h2&gt;__Webhooks&lt;/h2&gt;
&lt;p&gt;Webhooks enable user-defined HTTP callbacks for all writeable endpoints in the
OrderCloud API. They can be used to perform follow up tasks such as updating
an external CRM system when a user updates their profile, or send an email
through a 3rd party system when an order is submitted. Webhooks are
fundamentally designed to provide maximum flexibility within the integrated
solution.&lt;/p&gt;
&lt;p&gt;Owners and contributors with permission to administer webhooks can access this
feature. OrderCloud requires standard webhook information:  &lt;/p&gt;
&lt;table&gt;  
&lt;tr&gt;  
&lt;th&gt;

Payload URL

&lt;/th&gt;  
&lt;td&gt;

The URL OrderCloud will send data to.

&lt;/td&gt; &lt;/tr&gt;  
&lt;tr&gt;  
&lt;th&gt;

Secret

&lt;/th&gt;  
&lt;td&gt;

OrderCloud will encrypt this secret and pass it through the request headers.

&lt;/td&gt; &lt;/tr&gt;  
&lt;tr&gt;  
&lt;th&gt;

Trigger Events

&lt;/th&gt;  
&lt;td&gt;

The OrderCloud API endpoints that will trigger the webhook event. Webhooks can
only be triggered by endpoints that write to the database (`POST`/`PUT`/
`PATCH`/`DELETE`). The request body sent to the OrderCloud endpoint (if any)
will be passed along to the webhooks that use it.

&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;

&lt;p&gt;Beyond this basic info, we've enhanced our webhooks with some other, more
nuanced options:  &lt;/p&gt;
&lt;table&gt;  
&lt;tr&gt;  
&lt;th&gt;

Elevated Roles

&lt;/th&gt;  
&lt;td&gt;

Normally, OrderCloud will pass along a token that has the same roles as the
original request's access token. Elevated roles are any roles that you need
for your webhook that the original request's access token doesn't have
(usually for subsequent requests that access information the originating user
doesn't have permission to view).

&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;

&lt;h2&gt;__Integrations&lt;/h2&gt;
&lt;p&gt;Organization owners and contributors with permission to administer
integrations can access this feature. Choose a service from the &lt;em&gt;"Available
Services"&lt;/em&gt; tab and click &lt;em&gt;"Add"&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;![]({filename}/images/docs-guides/getting-
started/dashboard/available_services.jpg)&lt;/p&gt;
&lt;p&gt;You will be prompted to fill out the information required for OrderCloud to
communicate with the new account.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://ordercloud-api.github.io/docs/images/docs-guides/getting-started/dashboard/authorize_net.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Any applications that have the configured integration activated will have
access to use it.&lt;/p&gt;
&lt;h2&gt;__Conclusion&lt;/h2&gt;
&lt;p&gt;In summary, everything you need to create and maintain a robust API-driven
application is at your fingertips in the OrderCloud Dashboard. We're always
looking for ways to improve the experience, so any feedback or suggestions you
have as a user of the platform are greatly appreciated.&lt;/p&gt;</content><category term="getting started"></category></entry></feed>